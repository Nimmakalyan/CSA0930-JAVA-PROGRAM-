@@ -0,0 +1,53 @@
interface Tree {
    void fruits(String type, int quantity);
    void leaves(String color, int count, boolean isHealthy);
    void flowers(String color, int count, String fragrance, boolean hasPollen);
}

class Branch1 implements Tree {
    @Override
    public void fruits(String type, int quantity) {
        System.out.println("Branch1: " + quantity + " " + type + " fruits");
    }

    @Override
    public void leaves(String color, int count, boolean isHealthy) {
        System.out.println("Branch1: " + count + " " + color + " leaves, healthy: " + isHealthy);
    }

    @Override
    public void flowers(String color, int count, String fragrance, boolean hasPollen) {
        System.out.println("Branch1: " + count + " " + color + " flowers, fragrance: " + fragrance + ", has pollen: " + hasPollen);
    }
}

class Branch2 implements Tree {
    @Override
    public void fruits(String type, int quantity) {
        System.out.println("Branch2: " + quantity + " " + type + " fruits");
    }

    @Override
    public void leaves(String color, int count, boolean isHealthy) {
        System.out.println("Branch2: " + count + " " + color + " leaves, healthy: " + isHealthy);
    }

    @Override
    public void flowers(String color, int count, String fragrance, boolean hasPollen) {
        System.out.println("Branch2: " + count + " " + color + " flowers, fragrance: " + fragrance + ", has pollen: " + hasPollen);
    }
}

public class Main {
    public static void main(String[] args) {
        Branch1 branch1 = new Branch1();
        branch1.fruits("Apple", 10);
        branch1.leaves("Green", 50, true);
        branch1.flowers("Red", 20, "Sweet", true);

        Branch2 branch2 = new Branch2();
        branch2.fruits("Orange", 15);
        branch2.leaves("Yellow", 60, false);
        branch2.flowers("White", 25, "Fragrant", true);
    }
}
